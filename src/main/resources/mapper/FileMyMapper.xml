<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zysl.aws.mapper.S3FileMyMapper">
  <resultMap id="FolderBaseResultMap" type="com.zysl.aws.model.db.S3Folder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="service_no" jdbcType="VARCHAR" property="serviceNo" />
    <result column="folder_name" jdbcType="VARCHAR" property="folderName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <resultMap id="FileBaseResultMap" type="com.zysl.aws.model.db.S3File">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="service_no" jdbcType="VARCHAR" property="serviceNo" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="content_md5" jdbcType="VARCHAR" property="contentMd5" />
    <result column="folder_name" jdbcType="VARCHAR" property="folderName" />
    <result column="down_url" jdbcType="VARCHAR" property="downUrl" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="max_amount" jdbcType="INTEGER" property="maxAmount" />
    <result column="down_amount" jdbcType="INTEGER" property="downAmount" />
    <result column="validity_time" jdbcType="TIMESTAMP" property="validityTime" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="source_file_id" jdbcType="BIGINT" property="sourceFileId" />
  </resultMap>

  <resultMap id="ServiceBaseResultMap" type="com.zysl.aws.model.db.S3Service">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="service_no" jdbcType="VARCHAR" property="serviceNo" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="accessKey" jdbcType="VARCHAR" property="accesskey" />
    <result column="secretKey" jdbcType="VARCHAR" property="secretkey" />
    <result column="endpoint" jdbcType="VARCHAR" property="endpoint" />
  </resultMap>


  <select id="queryByName" parameterType="java.lang.String" resultMap="FolderBaseResultMap">
    select id, service_no, folder_name, create_time
    from s3_folder where folder_name = #{folderName}
  </select>

  <delete id="deleteFolderByName" parameterType="java.lang.String">
    delete from s3_folder
    where folder_name = #{folderName}
  </delete>

  <select id="queryFileByMd5" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*)
    from s3_file where content_md5 = #{content}
  </select>

  <select id="queryOneFile" parameterType="java.lang.String" resultMap="FileBaseResultMap">
    select *
    from s3_file where file_name = #{fileName} and folder_name=#{folderName}
    limit 0,1
  </select>

  <select id="queryFileInfoByMd5" parameterType="java.lang.String" resultMap="FileBaseResultMap">
    select id, service_no, file_name, content_md5, folder_name, down_url, file_size,
    max_amount, down_amount, validity_time, upload_time, source_file_id
    from s3_file where content_md5 = #{content}
  </select>

  <insert id="insertBatch">
    insert into s3_file_temp (service_no, file_name, content_md5,
    folder_name, down_url, file_size,
    max_amount, down_amount, validity_time,
    upload_time, create_time, source_file_id
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.serviceNo},#{item.fileName},#{item.contentMd5},#{item.folderName},#{item.downUrl},
      #{item.fileSize},#{item.maxAmount},#{item.downAmount},#{item.validityTime},
      #{item.uploadTime},#{item.createTime},#{item.sourceFileId})
    </foreach>
  </insert>

  <select id="queryServiceInfo" parameterType="java.lang.String" resultMap="ServiceBaseResultMap">
    select ss.* from s3_service ss inner join s3_folder sf on
    ss.service_no=sf.service_no
    where sf.folder_name=#{folderName}
  </select>

  <select id="queryPageFileInfo" parameterType="java.lang.Integer" resultMap="FileBaseResultMap">
    select * from s3_file_temp  order by id
    limit #{currPage} , #{pageSize}
  </select>

  <update id="updateByPrimaryKeySelective" parameterType="com.zysl.aws.model.db.S3File">
    update s3_file_temp
    <set>
      <if test="serviceNo != null">
        service_no = #{serviceNo,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="contentMd5 != null">
        content_md5 = #{contentMd5,jdbcType=VARCHAR},
      </if>
      <if test="folderName != null">
        folder_name = #{folderName,jdbcType=VARCHAR},
      </if>
      <if test="downUrl != null">
        down_url = #{downUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="maxAmount != null">
        max_amount = #{maxAmount,jdbcType=INTEGER},
      </if>
      <if test="downAmount != null">
        down_amount = #{downAmount,jdbcType=INTEGER},
      </if>
      <if test="validityTime != null">
        validity_time = #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceFileId != null">
        source_file_id = #{sourceFileId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>